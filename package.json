{
  "name": "micro-lib",
  "version": "1.0.0",
  "description": "",
  "installConfig": {
    "pnp": false
  },
  "main": "dist/index.js",
  "config": {
    "s3BucketName": "aegisserverless2",
    "region": "us-east-1",
    "cloudFormationStackName": "ServerlessExpressHttpApiStack",
    "functionName": "",
    "domain": ""
  },
  "repository": {
    "url": "https://github.com/module-federation/microlib"
  },
  "scripts": {
    "build": "npm run clean && npm run transpile && webpack --config webpack.config.js",
    "hot-reload": "curl http://localhost:8707/microlib/reload",
    "restart": "npm run build && npm run start",
    "rebuild": "npm run build && npm run hot-reload",
    "start": "node -r dotenv/config dist/index.js",
    "run-lambda": "node -r dotenv/config lambda.js",
    "transpile": "babel src/index.js src/auth.js src/cluster.js webpack/ -d dist",
    "dev-start": "nodemon --watch src --exec npm restart",
    "clean": "rimraf dist",
    "test": "mocha --recursive -r esm",
    "demo": "open http://localhost:8707",
    "demo-ssl": "open https://localhost:8070",
    "refresh-token": "./accessToken.sh",
    "hot-reload-reset": "curl https://localhost:8070/microlib/reload-reset",
    "invoke-lambda": "cross-var aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "cross-var aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "cross-var aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "cross-var aws cloudformation package --template ./sam-template.yaml --s3-bucket $npm_package_config_s3BucketName --output-template sam-template.packaged.yaml --region $npm_package_config_region",
    "deploy": "cross-var aws cloudformation deploy --template-file sam-template.packaged.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region --parameter-overrides DomainName=$npm_package_config_domain",
    "package-deploy": "npm run build && npm run package && npm run deploy",
    "delete-stack": "cross-var aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (cross-var aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "serverless-deploy": "serverless deploy",
    "serverless-invoke-local": "serverless invoke local --function startAegis"
  },
  "author": "Tyson Midboe",
  "license": "MIT",
  "dependencies": {
    "@octokit/core": "^3.4.0",
    "@octokit/rest": "^18.5.2",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-graceful-shutdown": "^1.1.3",
    "express-jwt": "^6.0.0",
    "import-fresh": "^3.3.0",
    "jwks-rsa": "^2.0.1",
    "mongodb": "^3.6.3",
    "node-fetch": "^2.6.1",
    "regenerator-runtime": "^0.13.7"
  },
  "devDependencies": {
    "@babel/cli": "^7.11.6",
    "@babel/core": "^7.11.0",
    "@babel/node": "^7.10.5",
    "@babel/polyfill": "^7.11.5",
    "@babel/preset-env": "^7.11.0",
    "babel-loader": "^8.1.0",
    "babel-preset-env": "^1.7.0",
    "core-js": "^3.6.5",
    "cross-var": "^1.1.0",
    "esm": "^3.2.25",
    "express-cli": "0.0.1",
    "mocha": "^8.2.0",
    "nodemon": "^2.0.6",
    "rimraf": "^3.0.2",
    "split": "^1.0.1",
    "webpack": "^5.4.0",
    "webpack-cli": "^3.3.12"
  }
}
