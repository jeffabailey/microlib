[
  {
    "modelName": "order",
    "endpoint": "orders",
    "dependencies": {},
    "mixins": [null, null, null, null, null],
    "eventHandlers": [null],
    "ports": {
      "listen": { "service": "Event", "type": "outbound", "timeout": 0 },
      "notify": { "service": "Event", "type": "outbound", "timeout": 0 },
      "save": { "service": "Persistence", "type": "outbound", "timeout": 0 },
      "find": { "service": "Persistence", "type": "outbound", "timeout": 0 },
      "validateAddress": {
        "service": "Address",
        "type": "outbound",
        "keys": "shippingAddress",
        "producesEvent": "addressValidated",
        "disabled": true
      },
      "authorizePayment": {
        "service": "Payment",
        "type": "outbound",
        "keys": "paymentAuthorization",
        "consumesEvent": "startWorkflow",
        "producesEvent": "paymentAuthorized"
      },
      "pickOrder": {
        "service": "Inventory",
        "type": "outbound",
        "keys": "pickupAddress",
        "consumesEvent": "pickOrder",
        "producesEvent": "orderPicked"
      },
      "shipOrder": {
        "service": "Shipping",
        "type": "outbound",
        "consumesEvent": "orderPicked",
        "producesEvent": "orderShipped"
      },
      "trackShipment": {
        "service": "Shipping",
        "type": "outbound",
        "keys": ["trackingStatus", "trackingId"],
        "consumesEvent": "orderShipped",
        "producesEvent": "orderDelivered"
      },
      "verifyDelivery": {
        "service": "Shipping",
        "type": "outbound",
        "keys": "proofOfDelivery",
        "consumesEvent": "orderDelivered",
        "producesEvent": "deliveryVerified"
      },
      "completePayment": {
        "service": "Payment",
        "type": "outbound",
        "consumesEvent": "deliveryVerified",
        "producesEvent": "workflowComplete"
      },
      "cancelShipment": { "service": "Shipping", "type": "outbound" },
      "refundPayment": { "service": "Payment", "type": "outbound" },
      "oauthCallback": {
        "type": "inbound",
        "adapter": "endpoints.oauthCallback",
        "keys": ["nonce"],
        "producesEvent": "refreshToken"
      },
      "refreshToken": {
        "type": "outbound",
        "service": "oauth",
        "settings": {
          "urls": [
            "facebook.com/oauth",
            "oauth.google.com",
            "indentity.service.com/oauth"
          ]
        },
        "consumesEvent": "refreshToken",
        "producesEvent": "tokenRefreshed"
      }
    },
    "endpoints": { "oauthCallback": { "uri": "oauth-callback" } },
    "relations": {
      "customer": {
        "modelName": "customer",
        "foreignKey": "customerId",
        "type": "manyToOne",
        "desc": "Many orders per customer, just one customer per order"
      }
    },
    "commands": {
      "decrypt": { "command": "decrypt", "acl": ["read", "decrypt"] },
      "approve": { "acl": ["write", "approve"] },
      "cancel": { "acl": ["write", "cancel"] }
    },
    "accessControlList": {
      "admin": { "allow": ["read", "delete", "decrypt"], "type": "role" },
      "owner": { "allow": "*", "deny": "delete", "type": "role" },
      "delegate": { "deny": "delete", "type": "role" },
      "approver": { "allow": "approve", "type": "role" },
      "orders": {
        "allow": "read",
        "type": "relation",
        "desc": "Allow customer model to see orders"
      }
    },
    "serializers": [
      {
        "on": "deserialize",
        "key": "creditCardNumber",
        "type": "string",
        "enabled": false
      },
      {
        "on": "deserialize",
        "key": "shippingAddress",
        "type": "string",
        "enabled": false
      },
      {
        "on": "deserialize",
        "key": "billingAddress",
        "type": "string",
        "enabled": false
      }
    ],
    "isRemote": true
  },
  {
    "modelName": "user",
    "endpoint": "users",
    "dependencies": {},
    "mixins": [null, null, null, null, null],
    "isRemote": true
  },
  {
    "modelName": "customer",
    "endpoint": "customers",
    "dependencies": {},
    "datasource": { "url": "mongodb://localhost:27017", "cacheSize": 2000 },
    "mixins": [null, null, null, null],
    "relations": {
      "orders": {
        "modelName": "order",
        "type": "oneToMany",
        "foreignKey": "customerId"
      }
    },
    "commands": {
      "decrypt": { "command": "decrypt", "acl": ["read", "decrypt"] }
    },
    "accessControlList": {
      "customer": {
        "allow": "read",
        "type": "relation",
        "desc": "Allow orders to see customers."
      }
    },
    "isRemote": true
  },
  {
    "endpoint": "products",
    "modelName": "product",
    "commands": { "hi": { "command": "hi", "acl": ["write"] } },
    "mixins": [null],
    "dependencies": {},
    "isRemote": true
  }
]
