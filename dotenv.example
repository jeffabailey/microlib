
# Example .env file

# Target environment: e.g. local, dev, test, prod
NODE_ENV=local

# Run in serverless mode (no webserver)
SERVERLESS=false

# Create child processes, one per core
CLUSTER_ENABLED=false

# Token-based authorization (JSON Web Tokens)
# Secure protected routes. See auth/key-set.json.
AUTH_ENABLED=false

# Use Secure Sockets Layer / TLS / HTTPS
# See cert/domain.crt, cert/server.key
SSL_ENABLED=false
SSL_PORT=8071
PORT=8070

# Default datasource for models that do not specify one
#DATASOURCE_ADAPTER=DataSourceMemory
#DATASOURCE_ADAPTER=DataSourceMongoDb
DATASOURCE_ADAPTER=DataSourceFile

# If using file system storage, choose directory.
DATASOURCE_FILE_DIRECTORY=/var/www/html

# Maximum number of instances to cache per model
CACHE_SIZE=2000
CACHE_ALGO=LRU

# Enable cache events for transparent integration
DISTRIBUTED_CACHE_ENABLED=false

# Common websocket server which aegis instances use for eventing
WEBSWITCH_ENABLED=false
WEBSWITCH_SERVER=switch.app-mesh.net
WEBSWITCH_PORT=8070
#WEBSWITCH_UPLINK=uplink.app-mesh.net

# Don't re/start workflow - always false in prod
RESUME_WORKFLOW_DISABLED=true

# URL root level path
API_ROOT=/microlib/api

# Shared secret for crypto
ENCRYPTION_PWD=secret

# Cloud serverless provider name
# See src/message.js
# PROVIDER_NAME=azure
# PROVIDER_NAME=google
PROVIDER_NAME=aws

# Get external IP
CHECK_IP=https://checkip.amazonaws.com

# Required by 3rd party client APIs
MONGODB_URL=mongodb://localhost:27017
KAFKA_GROUP_ID=microlib-host
# AWS_ACCESS_KEY_ID=xxxxxx
# AWS_SECRET_ACCESS_KEY=xxxxxx
# GITHUB_TOKEN=xxxxxx
# SQUARE_TOKEN=xxxxxx
# PAYPAL_TOKEN=xxxxxx
